日付: 2025-09-28

今日の取り組み:
- フロントエンド/バックエンドの起動手順とデバッグ方法（uvicorn の --reload や VS Code 設定、curl による API テスト）を整理。
- Auth0/JWT の認証フローを確認し、開発モードでの dev ユーザー自動作成を検証。シナリオ ID とカテゴリのマッピング、既存 DB データの内容も照会。
- SQLAlchemy Enum が原因の LookupError/ProgrammingError を解決するため、DB カラムを String 化し、Enum ↔ 文字列の相互変換をサービス層・スキーマで徹底。Pydantic v2 に合わせ Literal 型へ変更。
- SessionStartResponse / SessionStatusResponse のバリデーションエラーを解消し、レスポンスを文字列で統一。Session 延長・終了処理も想定どおり動作することを確認。
- DATABASE_URL を絶対パス化して常に apps/api/app.db を参照するように修正し、ルート直下に誤って生成された app.db を削除。

日付: 2025-09-29

今日の取り組み:
- 復習用のレビューサービスと API（`GET /api/v1/reviews/next`, `POST /api/v1/reviews/{id}/complete`）を実装し、復習アイテムの取得・完了・再スケジュール処理を追加。
- セッション終了レスポンスにシナリオ名や難易度・モードを含めるよう拡張し、保存されたトップフレーズを復習システムへ連携できるように調整。
- フロントエンドに復習ページ（`/review`）とクイズ UI を追加し、復習結果送信・再読み込み・セッション画面への導線を実装。
- UI コンポーネント（ボタンのバリアントなど）と型定義を更新し、新規フローに対応。

日付: 2025-10-01

今日の取り組み:
- セッション終了APIを冪等化し、既に終了済みのセッションIDに対しても保存済みサマリーを返せるように修正。
- フロントエンドの会話フックで終了処理の多重送信を防ぐガードを追加し、ユーザー操作の安定性を向上。

日付: 2025-10-02

今日の取り組み:
- Issue #20「サマリー画面API連携」を完了。TODOコメントを削除し、React Queryを使用したAPI連携を実装。
- セッション終了結果の取得・表示、トップ3フレーズの表示、復習予定の表示機能を実装。
- ローディング状態とエラーハンドリングを追加し、型安全性を向上。
- Issue #7「フロントエンド認証UI実装」を完了。Auth0認証UIを実装し、ログイン/ログアウト機能を追加。
- 認証コンポーネント（LoginButton, LogoutButton, AuthStatus, AuthGuard）を作成。
- 認証状態管理（React Context）、認証フロー、認証ガードを実装。
- バックエンドに認証エンドポイント（/auth/login, /auth/callback, /auth/logout）を追加。
- モック認証システムを実装し、開発環境での認証フローを完成。
- APIクライアントの認証エラーハンドリングを改善し、401エラー時の自動ログアウトを実装。

課題点:
- 認証URLの重複問題（/api/v1/api/v1/auth/login）を解決するため、環境変数設定の見直しが必要。
- 本格的なAuth0統合のため、実際のAuth0ドメインとクライアント設定の実装が必要。
- モック認証から本格認証への移行時のトークン検証ロジックの実装が必要。


日付: 2025-10-07

今日の取り組み:
- Issue #22「音声認識機能実装」を完了。Whisper API を使ったバックエンドの `/api/v1/audio/transcribe` を新設し、音声ファイル検証・エラーハンドリングを整備。
- フロントエンドに `use-audio-recording` フックと `AudioRecorder` コンポーネントを追加し、音声録音・文字起こし UI を会話画面へ統合。
- FormData 対応や API クライアントの改善、`Session` ライブラリ更新を行い、音声認識フロー全体を完成。
- `.env` テンプレート（`infra/env/backend.env.example`, `infra/env/frontend.env.example`）を用意し、README に環境変数セットアップ手順を追記。
- バックエンド設定を環境変数対応に整理し、`OPENAI_API_KEY` を外部設定に切り替え。
- `/auth/token` でアプリ署名の JWT を発行するよう修正し、`get_current_user` が自前トークンと Auth0 トークンを切り分けて検証できるよう改修。これによりセッション開始時の 401 エラーを解消。

課題点:
- 本番運用を見据えた Google OAuth 実トークン検証（Auth0 非依存）の整備とテストが未完。
- Whisper API 利用時の費用監視やレート制御、フロントの録音対応ブラウザ範囲のドキュメント化が必要。

日付: 2025-10-08

今日の取り組み:
- バックエンドから Auth0 依存コードを除去して自前 JWT のみに統一し、フロントとドキュメントの環境変数も Google OAuth 用に整理。
- 会話ターン処理で難易度 Enum を正規化して AI サービスに渡すよう修正し、500 エラーの原因になっていた型不一致を解消。
- VS Code デバッグ構成の作業ディレクトリを `apps/api` に合わせ、uvicorn が意図したディレクトリから起動するよう修正。
- 音声認識は Google Cloud Speech-to-Text 前提に変更し、バックエンド／フロント／会話統合／インフラ整備のそれぞれに対応する Issue 計画を作成。

日付: 2025-10-25

今日の取り組み:
- シナリオ選択による自動難易度設定機能を実装。シナリオ選択時に自動的に難易度が決定されるよう変更し、フロントエンドから難易度選択UIを削除。
- 会話終了判定機能を完全実装。AIがユーザーの発話から終了意図を検知し、自動的にセッションを終了する機能を追加。
  - バックエンド: ConversationResponse/TurnResponseにshould_end_sessionフラグ追加、全プロンプトに[END_SESSION]マーカー指示追加、AI応答パーサー修正、SessionServiceに自動終了処理実装
  - フロントエンド: 型定義更新、自動終了処理（2秒遅延）、UI表示改善
- バックエンドとフロントエンドを同時起動できるスクリプト（scripts/start_dev.sh）を作成。
- Issue #23「会話終了判定機能の実装」とIssue #24「サマリページの改善文をユーザー発話ベースに修正」を作成し、実装内容を詳細に記録。

課題点:
- サマリページの改善文表示がAI応答ベースになっているため、ユーザー発話ベースへの修正が必要。
- 会話終了判定がうまく動作していない。現在の実装では、AIがユーザーの発話から終了意図を適切に検知できていない。様々なAIモデル（GPT-4、GPT-4o、Claude等）での動作検証と、プロンプト設計の改善が必要。誤検知防止の検証も未完了。

日付: 2025-11-1
- 今日の取り組み。
 - "https://api.openai.com/v1/responses"は最新のOpenAIのエンドポイント
    旧バージョンは"https://api.openai.com/v1/chat/completions"
    返ってくるデータ構造も全然違う。
 - systempromptの作り方も違う。v1ではuserとsystem_promptの作りを別にできたがv2ではuser_inputに全て含める必要がある

日付: 2025-11-02

今日の取り組み:
- OpenAI APIエンドポイントを`/v1/responses`に移行し、新しいAPI形式に対応。
- リクエストパラメータを`input`フィールドにJSON文字列として送信する形式に変更（`messages`配列をJSON文字列化）。
- レスポンス解析を新しいAPI形式に対応。`output`配列から`content`を抽出し、`type`が`output_text`または`text`のアイテムからテキストを取得するように修正。
- タイムアウトを12秒から30秒に延長し、APIレスポンス待機時間を改善。
- サマリーページの「新しいセッションを開始する」ボタンを有効化。`useRouter`を使用してシナリオ選択ページ（`/`）にリダイレクトするように修正。

課題点:
- `/v1/responses`エンドポイントのリクエスト形式が正しく動作するかの検証が必要（400エラーやタイムアウトエラーの解決が必要）。
- 新しいAPI形式でのレスポンス構造の完全な理解と適切なエラーハンドリングの実装が必要。
